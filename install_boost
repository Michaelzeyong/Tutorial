由于ROS经常使用cv-bridge 这个包，但是ROS使用的是python2
cv-bridge 依赖与 boost， 但是没有自带的boost-py27版本，需要自己编译
故提供boost的编译教程
需要卸载ros-kinetic-cv-bridge，
下载cv-bridge 放到ros工作空间，重新编译


1. 解压boost1.58
2. ./bootstrp.sh
3. 出现project-config.jam 文件
    修改文件内容两处，gcc 和 option.set：

    # Boost.Build Configuration
    # Automatically generated by bootstrap.sh

    import option ;
    import feature ;

    # Compiler configuration. This definition will be used unless
    # you already have defined some toolsets in your user-config.jam
    # file.
    if ! gcc in [ feature.values <toolset> ]
    {
        #-------------------modify here-------------------------
        using gcc : : /usr/bin/aarch64-linux-gnu-gcc ; 
    }

    project : default-build <toolset>gcc ;

    # Python configuration
    using python : 2.7 : /usr ;

    # List of --with-<library> and --without-<library>
    # options. If left empty, all libraries will be built.
    # Options specified on the command line completely
    # override this variable.
    libraries =  ;

    # These settings are equivivalent to corresponding command-line

    #-------------------modify here-------------------------
    # options.
    option.set prefix : /usr/local ;
    option.set exec-prefix : /usr/local ;
    # option.set libdir : /usr/local/lib ;
    option.set libdir : /usr/lib/aarch64-linux-gnu ;
    # option.set includedir : /usr/local/include ;
    option.set includedir : /usr/include/aarch64-linux-gnu ;

    # Stop on first error
    option.set keep-going : false ;/usr/local/include
    
4. 修改boost/libs/config/checks/architecture/arm.cpp
    添加boost检查Arm的功能 删除原来的代码，修改为以下代码
    
    #if !defined(__arm__) && !defined(__thumb__) && \
    !defined(__TARGET_ARCH_ARM) && !defined(__TARGET_ARCH_THUMB) && \
    !defined(_ARM) && !defined(_M_ARM) && !defined(__aarch64__)
    #error "Not ARM"
    #endif
    
5. ./bjam 编译boost

6. sudo ./bjam install  安装boost到本机环境

7. 使用 

在CMakeLists.txt 直接使用
find_package(Boost REQUIRED python)

如果路径不是 lib 和 include 不是以下路径
    /usr/lib/aarch64-linux-gnu
    /usr/include/aarch64-linux-gnu

使用以下方式限定搜索范围
    #set(BOOST_INCLUDEDIR /usr/include/aarch64-linux-gnu)
    #set(BOOST_LIBRARYDIR /usr/lib/aarch64-linux-gnu)
